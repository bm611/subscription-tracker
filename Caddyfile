{
	# global options
	admin off # theres no need for the admin api in railway's environment
	persist_config off # storage isn't persistent anyway
	auto_https off # railway handles https for us, this would cause issues if left enabled
	log {
		# runtime logs
		format json # set runtime log format to json mode
	}
	servers {
		# server options
		trusted_proxies static private_ranges # trust railway's proxy
	}
}

:{$PORT} {
	# site block, listens on the $PORT environment variable, automatically assigned by railway
	log {
		# access logs
		format json # set access log format to json mode
	}

	# serve from the '.web/build/client' folder (reflex exports into the '.web/build/client' folder)
	root * .web/build/client

	# enable gzipping responses
	encode gzip

	# IMPORTANT: Handle WebSocket connections for Reflex 0.8.0+
	# This must come BEFORE the file_server directive
	handle /_event {
		reverse_proxy 127.0.0.1:8000 {
			header_up Upgrade {>Upgrade}
			header_up Connection {>Connection}
			header_up Host {host}
			header_up X-Real-IP {remote}
			header_up X-Forwarded-For {remote}
			header_up X-Forwarded-Proto {scheme}
		}
	}

	# Handle API routes
	handle /api/* {
		reverse_proxy 127.0.0.1:8000 {
			header_up Host {host}
			header_up X-Real-IP {remote}
			header_up X-Forwarded-For {remote}
			header_up X-Forwarded-Proto {scheme}
		}
	}

	# serve files from '.web/build/client'
	file_server

	# allows for pretty paths
	try_files {path} {path}.html

	# the handle_path directive will strip /backend/ from the path before proxying
	handle_path /backend/* {
		# this strips the /backend/ prefix from the uri sent to the proxy address
		reverse_proxy 127.0.0.1:8000 {
			header_up Upgrade {>Upgrade}
			header_up Connection {>Connection}
			header_up Host {host}
			header_up X-Real-IP {remote}
			header_up X-Forwarded-For {remote}
			header_up X-Forwarded-Proto {scheme}
		} # proxy all requests for /backend/* to the backend with WebSocket support
	}

	# rewrite any errors to the corresponding error page
	handle_errors {
		rewrite * /{err.status_code}.html
		file_server
	}
}
